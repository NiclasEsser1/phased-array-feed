#!/usr/bin/env python

import os, parser, argparse, ConfigParser, time

def ConfigSectionMap(fname, section):
    # Play with configuration file
    Config = ConfigParser.ConfigParser()
    Config.read(fname)
    
    dict_conf = {}
    options = Config.options(section)
    for option in options:
        try:
            dict_conf[option] = Config.get(section, option)
            if dict_conf[option] == -1:
                DebugPrint("skip: %s" % option)
        except:
            print("exception on %s!" % option)
            dict_conf[option] = None
    return dict_conf

# docker run --ipc=container:basebad2power --rm -it -v /beegfs:/beegfs -v /home/pulsar:/home/pulsar -u 50000:50000 --ulimit memlock=-1:-1 --name diskdb xinpingdeng/phased-array-feed "./baseband2power.py -a ../config/pipeline.conf -b ../config/system.conf -c 0.016"
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Convert baseband data to power with original channels')
    parser.add_argument('-a', '--pipeline_conf', type=str, nargs='+',
                        help='The configuration of pipeline')
    parser.add_argument('-b', '--system_conf', type=str, nargs='+',
                        help='The configuration of system')
    parser.add_argument('-c', '--tsamp', type=float, nargs='+',
                        help='The sampleing time of converted power data')

    args          = parser.parse_args()
    pipeline_conf = args.pipeline_conf[0]
    system_conf   = args.system_conf[0]
    tsamp         = args.tsamp[0]
    
